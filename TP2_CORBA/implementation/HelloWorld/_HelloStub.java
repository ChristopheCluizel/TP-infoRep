package HelloWorld;


/**
* HelloWorld/_HelloStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from HelloWorld.idl
* mercredi 4 f√©vrier 2015 17 h 32 CET
*/

public class _HelloStub extends org.omg.CORBA.portable.ObjectImpl implements HelloWorld.Hello
{

  public String sayHello (String name) throws HelloWorld.HelloPackage.ChaineVide
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sayHello", true);
                $out.write_string (name);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:HelloWorld/Hello/ChaineVide:1.0"))
                    throw HelloWorld.HelloPackage.ChaineVideHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sayHello (name        );
            } finally {
                _releaseReply ($in);
            }
  } // sayHello

  public int addition (int a, int b) throws HelloWorld.HelloPackage.Negatif
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addition", true);
                $out.write_ulong (a);
                $out.write_ulong (b);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:HelloWorld/Hello/Negatif:1.0"))
                    throw HelloWorld.HelloPackage.NegatifHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addition (a, b        );
            } finally {
                _releaseReply ($in);
            }
  } // addition

  public int soustraction (int a, int b) throws HelloWorld.HelloPackage.Negatif
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("soustraction", true);
                $out.write_ulong (a);
                $out.write_ulong (b);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:HelloWorld/Hello/Negatif:1.0"))
                    throw HelloWorld.HelloPackage.NegatifHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return soustraction (a, b        );
            } finally {
                _releaseReply ($in);
            }
  } // soustraction

  public int multiplication (int a, int b) throws HelloWorld.HelloPackage.Negatif
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("multiplication", true);
                $out.write_ulong (a);
                $out.write_ulong (b);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:HelloWorld/Hello/Negatif:1.0"))
                    throw HelloWorld.HelloPackage.NegatifHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return multiplication (a, b        );
            } finally {
                _releaseReply ($in);
            }
  } // multiplication

  public int division (int a, int b) throws HelloWorld.HelloPackage.Negatif, HelloWorld.HelloPackage.DivisionParZero
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("division", true);
                $out.write_ulong (a);
                $out.write_ulong (b);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:HelloWorld/Hello/Negatif:1.0"))
                    throw HelloWorld.HelloPackage.NegatifHelper.read ($in);
                else if (_id.equals ("IDL:HelloWorld/Hello/DivisionParZero:1.0"))
                    throw HelloWorld.HelloPackage.DivisionParZeroHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return division (a, b        );
            } finally {
                _releaseReply ($in);
            }
  } // division

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:HelloWorld/Hello:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _HelloStub
